{
  "name": "OQL",
  "scopeName": "source.oql",
  "patterns": [
    {
      "include": "#solver"
    },
    {
      "include": "#sexp"
    },
    {
      "include": "#string"
    }
  ],
  "repository": {
    "datastore": {
      "match": "(?<=\\()\\w*(?=\\/)",
      "name": "keyword.control.oql"
    },
    "solver": {
      "begin": "(\\(:-)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.begin.oql"
        }
      },
      "end": "(?<!\\()",
      "endCaptures": {
        "1": {
          "name": "keyword.control.end.oql"
        }
      },
      "name": "keyword.control.oql",
      "patterns": [
        {
          "include": "#sexp"
        },
        {
          "include": "#string"
        }
      ]
    },
    "sexp": {
			"begin": "(\\()",
			"beginCaptures": {
				"1": {
					"name": "punctuation.section.expression.begin.oql"
				}
			},
			"end": "(\\))$|(\\)(?=[\\}\\]\\)\\s]*(?:;|$)))|(\\))",
			"endCaptures": {
				"1": {
					"name": "punctuation.section.expression.end.trailing.oql"
				},
				"2": {
					"name": "punctuation.section.expression.end.trailing.oql"
				},
				"3": {
					"name": "punctuation.section.expression.end.oql"
				}
			},
      "name": "meta.expression.oql",
      "patterns": [
        {
          "begin": "(?<=\\()",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.oql"
            }
          },
          "end": "(?=\\))",
          "name": "meta.definition.global.oql",
          "patterns": [
            {
              "include": "$self"
            },
            {
              "include": "#datastore"
            }
          ]

        },
        {
          "include": "#string"
        },
        {
          "include": "#self"
        },
        {
          "include": "#datastore"
        }
      ]
    },
    "string": {
      "begin": "(?<!\\\\)(\")",
      "beginCaptures": {
        "1": {
          "name": "string.begin.oql"
        }
      },
      "end": "(\")",
      "endCaptures": {
        "1": {
          "name": "string.end.oql"
        }
      },
      "name": "string.quoted.double.oql",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.oql"
        }
      ]
    }
  }
}